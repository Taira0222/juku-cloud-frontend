name: Frontend CI & CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # 手動で実行可能
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Run npm audit
        run: npm audit --audit-level=high

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: lint-and-test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # ← OIDCで必須（デプロイ用ジョブで使う）

    env:
      REGION: ap-northeast-1
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      CF_DISTRIBUTION_ID: ${{ secrets.CF_DISTRIBUTION_ID }}
      ROLE_ARN: ${{ secrets.AWS_ROLE_ARN_FRONT }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # Viteの環境変数をセット
      - name: Export Vite envs to GitHub Actions
        run: |
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> $GITHUB_ENV
          echo "VITE_FRONTEND_BASE_URL=${{ secrets.VITE_FRONTEND_BASE_URL }}" >> $GITHUB_ENV

      - name: Build
        run: |
          npm ci
          npm run build

      # OIDCでAWSにログイン
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: ${{ env.REGION }}

      # 1) dist/assets 以下はキャッシュあり（immutable）
      - name: Upload immutable assets
        run: |
          aws s3 cp dist/assets "s3://${{ env.S3_BUCKET }}/assets" \
            --recursive \
            --cache-control "public,max-age=31536000,immutable" \
            --only-show-errors

      # 2) それ以外は no-cache
      - name: Upload rest (no-cache)
        run: |
          aws s3 cp dist "s3://${{ env.S3_BUCKET }}" \
            --recursive \
            --exclude "assets/*" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --only-show-errors

      # CloudFrontのキャッシュを削除（index.htmlとルートパスのみ）
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ env.CF_DISTRIBUTION_ID }}" \
            --paths "/index.html" "/"
